{
"title0": "Cut", /*Этот заголовок пишется вверху окна. Цифра 1 означает, что заголовок используется для первого уровня*/
    "statement0": <<<
        <p><b>   Statement.</b> In this problem you should make up a figure from rectangles and then cut it
        to as many pieces as possible. (Small pieces do not count).
        The figure you build should not have holes and it should be connected, that is it should consist of one `piece'. You have six straight cuts
        to cut a figure.</p>

        <p>   The program has two modes: the first is for modification of a figure (click cells of a figure to turn them on or off). The second mode
        if for modification of cuts. Cut is a line that you may move by moving points that it passes through. Points are always on the sides of a square.</p>
		<p>   The more pieces you cut, the better is your result, but remember that small pieces do not count. They are filled with red.</p>
		<p>   Two participants that have equal number of pieces are compared based on the area of their figures, the smaller the better.</p>
	>>>,
	"help0":<<<
	    <p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
                    		and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
	>>>,
    "title1": "Waste less!", /*Этот заголовок пишется вверху окна. Цифра 1 означает, что заголовок используется для первого уровня*/
    "statement1": <<<
        <p><b>   Statement.</b> In this problem you should make up a figure from rectangles and then cut it
                to as many pieces as possible. (Small pieces do not count).
                The figure you build should not have holes and it should be connected, that is it should consist of one `piece'. You have six straight cuts
                to cut a figure.</p>
        <p>   The program has two modes: the first is for modification of a figure (click cells of a figure to turn them on or off). The second mode
        if for modification of cuts. Cut is a line that you may move by moving points that it passes through.</p>
        <p>   The more pieces you cut, the better is your result, but remember that small pieces do not count. They are filled with red.</p>
        <p>   Two participants that have equal number of pieces are compared based on the area of their figures, the smaller the better.</p>
	>>>,
	"help1":<<<
	    <p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
                    		and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
	>>>,
	"title2": "Optimal cutting",
	"statement2": <<<
        <p><b>   Statement.</b> In this problem you should make up a figure from rectangles and then cut it
                        to as many pieces as possible. (Small pieces and triangles do not count).
                        The figure you build should not have holes and it should be connected, that is it should consist of one `piece'. You have six straight cuts
                        to cut a figure.</p>
                <p>   The program has two modes: the first is for modification of a figure (click cells of a figure to turn them on or off). The second mode
                if for modification of cuts. Cut is a line that you may move by moving points that it passes through.</p>
                <p>   The more pieces you cut, the better is your result, but remember that small pieces and triangles do not count. Small pieces are filled with red.</p>
                <p>   Two participants that have equal number of pieces are compared based on the area of their figures, the smaller the better.</p>
	>>>,
	"help2":<<<
	    <p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
                    		and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
	>>>
,
	"errors": {
	    "has_outer": "Polygon is not connected",
	    "has_inner": "Polygon has holes",
	    "no_elements": "Empty polygon",
	    "thin_poly": "Thin polygon"
	},
	"labels": {
        "polys": "Polygons:",
        "area": "Area:",
        "offcuts": "Offcuts:",
        "switch_to_poly": "Edit polygon",
        "switch_to_cuts": "Edit cuts",
        "results": "Results",
        "record": "Record",
        "clear": "Clear"
	}
}