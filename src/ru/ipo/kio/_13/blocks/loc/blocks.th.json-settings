{
    /*Первые несколько строчек текста необходимы всегда, они описывают заголовок задачи, тексты условия и помощи*/

   "หัวข้อ0": "รถเครน", /*หัวข้อนี้เขียนอยู่ด้านบนหมายเลข 1 หมายถึงหัวข้อถูกใช้สำหรับระดับที่ 1*/
        "ข้อความ 0": <<<
            <p><b>   บทนำ.</b> คุณเคยเห็นการทำงานของรถเครนหรือไม่ อย่างไรก็ตามในการโหลดสิ่งของของรถเครนที่ได้มาตราฐานจะเห็นว่ามันจะมีสองขาไว้หนีบสิ่งของเรียกว่าขาหยั่ง  ซึ่งเป็นอุปกรณ์ที่ใช้สำหรับการก่อสร้างและยกสิ่งของในระดับสูง
            <p><b>   โจทย์ปัญหา</b>งานในโจทย์ข้อนี้เป็นเรื่องเกี่ยวกับการโหลดและการถอดตู้คอนเทนเนอร์จากรถเทรน </p>
    		<p>  ตู้คอนเทรนเนอร์สามารถตั้งซ้อนกันได้เพียงแค่ถ้าสีด้านบนอยู่บนต้องตามเงือนไขดังนี้ บนสีแดงวางได้ทุกสี บนสีเหลืองวางได้ทุกสียกเว้นสีแดง, บนสีเขียวต้องเป็นสีฟ้าและบนสีฟ้าไม่สามารถวางสีอะไรได้เลย สำหรับผู้ที่ทำผิดกติกาจะถูกลงโทษปรับคะแนน
    		<p>   รถเครนประกอบด้วยสี่รหัส: T – จับและยกขึ้น, P – ปล่อยและวางลง, L –  ย้ายไปทางซ้ายหรือR – ย้ายไปทางขวา. รหัสสามารถปฏิบัติได้โดยตรงโดยกดตรงปุ่มหรือสามารถเริ่มจากเลือกทุกรหัสหลังจากนั้นดูว่าผลของการกดเป็นอย่างไร. ซึ่งอยู่ในโหมดของภาพเคลื่อนไหวหรือตามลำดับขั้นตอน ย้ายคอนเทรนเนอร์ได้มากเท่าไหร่ยิ่งดีเท่านั้น >ถ้าย้ายตู้คอนเทรนเนอร์ได้ตามกฏเกณฑ์ได้ถูกหมดจะวัดกันที่ขั้นตอนน้อยที่สุดจะยิ่งได้คะแนนดีที่สุด
    		<p>   ผลการแก้ปัญหาที่ดีที่สุดจะถูกบันทึกอัตโนมัติแต่ทุกครั้งสามารถกดบันทึกได้ด้วยตนเองโดยกดไปที่ปุ่มบันทึก
            <p><b>   คำแนะนำสำหรับครู อาจจะแนะนำให้นักเรียนวาดแผนผังของโปรแกรม ใช้พลอตเดียวกันกับระดับสองและให้นักเรียนลองพลอตโปรแกรมดู ตัวอย่างเช่น วางทุกคอนเทรนเนอร์ลงบนพื้นที่ว่างทีละหนึ่งแล้วให้สังเกตุผลที่เกิดขุ้น  ถ้าวางคอนเทรนเนอร์อีกอันไม่วางข้างบนแต่ว่าข้างล่างแทนจะเกิดอะไรขึ้น  และลองทำสลับกันไปแล้วสังเกตผลที่เกิดขึ้น  นักเรียนจะรับทราบว่าโปรแกรมที่ดจะต้องมีผลที่น่าเชื่อถือด้วยวิธีการต่างๆหลากหลายวิธี  การกำหนดค่าของคอนเทรนเนอร์จะขึ้นอยู่กับโปรแกรมและระบบการทำงาน
    			>>>,
    	"ช่วยเหลือ0":<<<
    	    <p>   ปุ่มสำหรับกดรหัสจะมีการบันทึก  เมื่อมีการกดปุ่มแต่ละปุ่มผลจะบันทึกอยู่ด้านล่าง  โปรแกรมจะทำการบันทึกผลทั้งหมด  สามารถกดทบทวนได้โดยกดที่ปุ่ม เคลื่อนไหว หรือ ทำทีละขั้นตอน(จะเห็นความแตกต่างทีละขั้นตอน)แต่จะสามารถทำได้ก็ต่อเมื่อได้มีการเริ่มแก้โจทย์ปัญหานั้นไปแล้ว
    		<p>  การแก้ปัญหาใด ๆ สามารถบันทึกและโหลดตามที่ต้องการ (ปกตินี้จะไม่ใช้เพราะการบันทึกจะถูกบันทึกโดยอัตโนมัติและทางออกที่ดีที่สุดของปัญหาทั้งหมดก็มารวมตัวกันโดยอัตโนมัติเมื่อคุณคลิกบันทึกคะแนนที่ดีที่สุดและโปรไฟล์)
    	>>>,
         "หัวข้อที่1"รถเครนอัตโนมัติ หัวข้อนี้ถูกเขียนด้านบน หมายเลข 1 หมายถึงหัวข้อถูกใช้สำหรับระดับที่ 1
        "บทความที่1": <<<
            <p><b>   คำนำ.</b> คุณอาจจะเคยได้ยินเกี่ยวกับเครื่องระบบจักรเกี่ยวกับคอมพิวเตอร์ ซึ่งเครื่องจักรประเภทนี้ต้องใช้อุปกรณ์มากมายหลายขั้นตอน
            <p><b>   โจทย์ปัญหา</b> โจทย์ของคุณคือ  สร้างโปรแกรมอัตโนมัติสำหรับการทำงานของรถเครนด้วยขั้นตอนซึ่งสำหรับการเคลื่อนย้ายตู้คอนเทรนเนอร์  จำเป็นจะต้องสลับที่ตู้คอนเทรนเนอร์รวมไปขั้นตอนการโหลดหรือยกตู้คอนเทรนเนอร์ รถเครนจะมีรหัสในการยกดังนี้ รหัส: T – ยกหรือโหลด, P – วาง, L –  ย้ายไปทางซ้าย 1 ตำแหน่ง และ R –  ย้ายไปทางขวา 1 ตำแหน่งใช้วงเล็บเพื่อที่ต้องการตรวจสอบขั้นตอนเช่นเขียน7R หมายถึง 7 ขั้นทางขวา เขียน 5(TRPR) เปลี่ยนตำแหน่ง 5 ครั้งของตู้คอนเทรนเนอร์ ยกและเคลื่อนซ้ายจากนั้นโหลดลงทางด้านขวา หรืออาจจะพิมพ์ให้เกิดระบบขั้น ลองดูสิว่าโปรแกรมของ3(2(TRPR)3L)จะทำงานอย่างไร
            <p>   โปรแกรมสามารถที่จะแสดงได้ในโหมดเคลื่อนไหวหรือโหมดทีละขั้นตอน  ถ้าเข้าใจการทำงานของโปรแกรมแล้วจะเห็นชัดเกี่ยวกับผล ดังนั้นยิ่งย้ายคอนเทรนเนอร์ได้เยอะและยิ่งใช้ขั้นตอนน้อยเท่าไหร่ยิ่งดี  ผลที่ดีที่สุดยึดจากการใช้จำนวนรหัสที่ถูกบันทึกให้น้อยที่สุด ถ้ารหัสถูกบันทึกยาวๆและซ้ำๆกันแล้วจะเท่ากับว่าทำซ้ำ
    		<p>    การแก้ปัญหาใด ๆ สามารถบันทึกและโหลดตามที่ต้องการแต่ปกติจะถูกบันทึกอัตโนมัติ
    		<p><b>  คำแนะนำสำหรับครู   ใช้ได้ทั้งสองระดับ ซึ่งสามารถทดลองได้ด้วยตนเองให้นักเรียนลองวาดแผนผังได้  ซึ่งจะได้ผลที่ดี ซึ่งจะแนะนำให้เด็กรู้จักการทำงานของระบบโปรแกรม เด็กจะได้เห็นถึงขั้นตอนการทำงานของโปรแกรม  หนึ่งจากโจทย์ปัญหาเป็นทฤษฏีโปรแกรม โดยสร้างขี้นเพื่อพิสูจน์การทำงานของวัฏจักรของโปรแกรม  สำหรับการหาการเปลี่ยนวัฏจักรโปรแกรมเช่น สำหรับวัฏจักรโปรแกรม5(TRPR)จะเห็นว่าเป็นเงี่อนไ «ตู้คอนเทรนเนอร์ภายใต้การเปลี่ยนหรือสลับที่หนึ่งตำแหน่งทางขวาและถัดไปทางซ้ายและขวา
    			>>>,
    	"ช่วยเหลือ1":<<<
    	    <p>   ปุ่มสำหรับกดขั้นตอนเคลื่อนย้าย  โปรแกรมประกอบด้วยสองโหมด คือ ระบบมือและระบบโปรแกรม  ในแบบแรกจากทุกรหัสสามารถตรวจสอบได้  ในโหมดโปรแกรมจะต้องเริ่มจากการเขียนโปรแกรม  ซึ่งนอกเหนือจากรหัส(T, P, R, L) การใช้วงเล็บและจำนวน จะเป็นตัวช่วยในการสร้างวัฏจักรของโปรแกรม
    		<p>    การแก้ปัญหาใด ๆ สามารถบันทึกและโหลดตามที่ต้องการแต่ปกติจะถูกบันทึกอัตโนมัติ
    	>>>,
    	"title2": "Погрузка контейнеров",
    	"statement2": <<<
            <p><b>   Введение.</b> Вы, наверное, слышали про станки с ЧПУ (числовым программным управлением). Они позволяют запомнить много элементарных действий, а потом воспроизвести их многократно. </p>
            <p><b>   Задание.</b> Ваша задача – расставить 10 красных и/или синих контейнеров на площадке и 10 зеленых и/или жёлтых на трейлере и составить как можно более короткую программу управления краном для переноса всех контейнеров, стоящих на площадке, на трейлер, а контейнеров с трейлера – на площадку (разные цвета сохранены для удобства слежения за погрузкой-разгрузкой).</p>
    		<p>   Кран выполняет всего четыре команды: T – взять и поднять груз, P – опустить и положить груз, L –  сдвинуться на одну позицию влево или R –  вправо. Используя скобки, можно повторяющиеся действия записать короче. Например, запись 7R означает семь шагов вправо, запись 5(TRPR) – перемещение пяти контейнеров, стоящих через одного, на одну позицию вправо. Можно использовать и более сложные команды – вложенные циклы. Посмотрите, как будет работать программа 3(2(TRPR)3L) на конфигурации, когда все позиции заняты.</p>
    		<p>   Программу можно запускать как в анимационном режиме, так и по шагам. Если понятно, как работает программа, то можно сразу посмотреть результат, нажав на кнопку мгновенного выполнения. Чем больше контейнеров будет перенесено в нужную часть, тем лучше. Если все контейнеры перенесены, то лучшим считается решение с меньшим числом команд в записи программы. Если и длина программ будет одинакова, то сравниваться решения будут по времени выполнения программы – числу шагов, сделанных краном при выполнении программы.</p>
    		<p>   Лучшее решение сохраняется автоматически и к нему можно всегда вернуться, нажав кнопку загрузки рекорда.</p>
    		<p><b>   На заметку учителю</b>.</p>
    		<p>1) Предложите решить аналогичную задачу с 4 контейнерами каждого цвета, но с дополнительным условием сохранения взаимного положения разноцветных контейнеров после переноса. Хотя программа отслеживать это ограничение не будет, результат легко проверить визуально, так как на экране остается исходная конфигурация.</b>
    		<p>2) Предложите ученикам устроить «бой программистов», в котором каждая команда представит свою конфигурацию (и короткую программу-ответ; обратите внимание, что составлять задачу можно от ответа – написать короткую программу с вложенными циклами и найти конфигурацию, на которой результат её работы будет интересным). Противники должны написать программу переноса контейнеров для данной конфигурации. Можно упростить задачу – предложив осуществить только погрузку (или только разгрузку) контейнеров.</p>
    	>>>,
    	"help2":<<<
    		<p>   Для расстановки контейнеров нужно щелкать мышкой по контейнерам и пустым местам на схеме их расположения (контейнер не может «висеть в воздухе», поэтому имеет смысл щёлкать только по полям над уже стоящими контейнерами). При повторных щелчках на значок контейнера, он последовательно меняет цвет, исчезает и появляется.</p>
    	    <p>   Кнопки для выполнения команд имеют понятные логотипы. Программа имеет два режима: ручной и программный. В первом из них команды выполняются непосредственно при нажатии на кнопки действий. В программном режиме сначала пишется программа, в которой, кроме команд действий (T, P, R, L), используются скобки и числа, с помощью которых создаются циклические программы. Написанную программу можно выполнить, используя режим анимации или по шагам (причем выполнение шагов можно посмотреть и в обратном порядке). Если нужно исправить программу, то часть команд, начиная с последней, можно стереть, используя кнопку отмены последней команды. Также можно установить курсор в нужное место программы и внести новые команды.</p>
    		<p>   Любые решения можно сохранять и загружать по мере надобности (обычно этим не пользуются, так как рекорд запоминается автоматически, а лучшие решения всех задач также собираются вместе автоматически при нажатии кнопки сохранения лучших результатов и анкеты).</p>
    			>>>

    ,
	"parse_errors": {
	    "unexpected_symbol": "สัญลักษร์ที่ไม่คาดหวัง",
	    "unexpected_token": "ไม่คาดหวัง",
	    "unexpected_end": "จบแบบที่ไม่คาดหวัง",
	    "digit_expected": "หน่วยที่คาดหวัง",
	    "close_bracket_expected": "วงเล็บปิด",
	    "number_too_big": "ใช้จำนวนครั้งมากไป"
	},
	"exec_errors": {
	    "no_left": "ไม่สามารถเคลื่อนย้ายไปทางซ้ายได้",
	    "no_right": "ไม่สามารถเคลื่อนย้ายไปทางขวาได้",
	    "occupied": "ไม่สามารถหยิบได้อีกหนึ่งหน่วย",
	    "not_occupied": "ไม่มีบล็อกสำหรับวาง",
	    "nothing_to_take": "ไม่มีบล็อกให้หยิบ",
	    "nowhere_to_put": "ไม่มีที่ให้วาง",
	    "forbidden_order": "ในบล็อกนี้ไม่สามารถวางได้"
	},
	"field_errors": {
        "left_blocks_fail": "จำเป็นต้องวาง 10 บล็อกทางซ้าย",
        "right_blocks_fail": "จำเป็นต้องวาง 10 บล็อกทางขวา"
	},
	"buttons": {
	    "to_start": "เริ่มต้น",
	    "clear": "ลบ",
	    "step_forward": "ขั้นตอน +",
	    "step_back": "ขั้นตอน -",
	    "to_end": "ทันที",
	    "to_end_0": "ตอนจบ",
        "go": "ปล่อย",
        "stop": "หยุด",
        "manual": "แมนนวล",
        "stop_manual": "หยุดแมนนวล"
	},
	"step": "ขั้นตอน:",
	"msg": {
	    "no_errors": "ในโปรแกรมไม่มีจุดผิด",
	    "finish": "สิ้นสุด",
	    "execution_error": "ข้อผิดพลาดของรถเครน:",
	    "parse_error": "ข้อผิดพลาดในโปรแกรม:"
	},
	"labels": {
	    "record": "บันทึก",
	    "result": "ผลลัพท์",
        "in_place": "บล็อกในตำแหน่ง:",
        "penalty": "ตัดแต้ม:",
        "steps": "ขั้นตอนตามโปรแกรม:",
        "prg_len": "ความยาวของโปรแกรม:"
	}
}