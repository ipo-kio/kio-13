{
    /*Первые несколько строчек текста необходимы всегда, они описывают заголовок задачи, тексты условия и помощи*/

    "title0": "Crane", /*Этот заголовок пишется вверху окна. Цифра 1 означает, что заголовок используется для первого уровня*/
        "statement0": <<<
            <p><b>   Statement.</b> You need to put containers on a trailer and to remove all containers from a trailer.</p>

    		<p>   Containers have colors, and you should not put containers over each other in wrong spectrum order, that is:
    		you may put any color on red containers; all colors except red on yellow containers; on green you may put only green and blue,
    		and you may put only blue on blue. Every violation of this order adds you one penalty score.</p>
    		<p> Crane is able to execute only four commands: `T' take a container, `P' put a container, `L' move one position to the left,
    		`R' move one position to the right. You can give a command by pressing buttons, and you can also type all commands and then execute them.
    		You can execute a program with commands either in animation mode or in step by step mode.</p>
    		<p>The more containers you move to the right place, the better. If all containers are on correct positions, then you should optimize the number
    		of commands that were used for this.</p>
    		<p> The best solutions are saved automatically, and you can always return to them by pressing a corresponding button on the right panel.</p>
    			>>>,
    	"help0":<<<
    	    <p> Buttons with commands have understandable icons. When you press these buttons, the commands are executed, and their codes are appended to the program.
    	    This program may be executed again in the animation mode or in step by step mode. You can also execute steps of the program backwards.
    	    All commands always append to the end of the program. You may undo last entered commands with the undo button.</p>
    		<p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
            and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
    	>>>,
        "title1": "Automatic crane", /*Этот заголовок пишется вверху окна. Цифра 1 означает, что заголовок используется для первого уровня*/
        "statement1": <<<
            <p><b>   Statement.</b> You need to move all containers from a platform to a trailer and to move all containers from a trailer to a platform.</p>
            <p> Crane is able to execute only four commands: `T' take a container, `P' put a container, `L' move one position to the left,
                		`R' move one position to the right.</p>
            <p>Using numbers may shorten programs. For example, `7R' means seven steps to the left, `5(TRPR)' means moving of five containers standing
              one over one one position to the right. You may use more sophisticated programs such as 3(2(TRPR)3L), run this program.</p>
            <p>You can execute a program with commands either in animation mode or in step by step mode. There is also a button of fast execution, it
            shows the final result after all commands are executed.</p>
            <p>The more containers you move to the right place, the better. If all containers are on correct positions, then you should optimize the length
            of the program that was used for this. Two participants with all containers on their places and with the same length of the program are compared
            based on the number of steps that the program does.</p>
    		<p> The best solutions are saved automatically, and you can always return to them by pressing a corresponding button on the right panel.</p>
    			>>>,
    	"help1":<<<
            	    <p> Buttons with commands have understandable icons. When you press these buttons, the commands are executed, and their codes are appended to the program.
            	    This program may be executed again in the animation mode or in step by step mode. You can also execute steps of the program backwards.
            	    All commands always append to the end of the program. You may undo last entered commands with the undo button.</p>
            		<p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
                    and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
        >>>,
    	"title2": "Loading containers",
    	"statement2": <<<
                    <p><b>   Statement.</b> You need to move all containers from a platform to a trailer and to move all containers from a trailer to a platform.</p>
                    <p> Crane is able to execute only four commands: `T' take a container, `P' put a container, `L' move one position to the left,
                        		`R' move one position to the right.</p>
                    <p>Using numbers may shorten programs. For example, `7R' means seven steps to the left, `5(TRPR)' means moving of five containers standing
                      one over one one position to the right. You may use more sophisticated programs such as 3(2(TRPR)3L), run this program.</p>
                    <p>You can execute a program with commands either in animation mode or in step by step mode. There is also a button of fast execution, it
                    shows the final result after all commands are executed.</p>
                    <p>You can rearrange initial positions of blocks by clicking on the blocks map at the bottom left of the screen. Rearranged blocks may help you
                    to move them from the platform to the trailer and backwards faster.</p>
                    <p>The more containers you move to the right place, the better. If all containers are on correct positions, then you should optimize the length
                    of the program that was used for this. Two participants with all containers on their places and with the same length of the program are compared
                    based on the number of steps that the program does.</p>
            		<p> The best solutions are saved automatically, and you can always return to them by pressing a corresponding button on the right panel.</p>
            			>>>,
            	"help2":<<<
                    	    <p> Buttons with commands have understandable icons. When you press these buttons, the commands are executed, and their codes are appended to the program.
                    	    This program may be executed again in the animation mode or in step by step mode. You can also execute steps of the program backwards.
                    	    All commands always append to the end of the program. You may undo last entered commands with the undo button.</p>
                    		<p>   Any solution may be saved and loaded when needed, but you will probably use this feature seldom, because a record solution is stored automatically,
                            and all best solutions of all problems are collected automatically when the best results and questionnaire are saved.</p>
                >>>
    ,
	"parse_errors": {
	    "unexpected_symbol": "Unexpected symbol",
	    "unexpected_token": "unexpected",
	    "unexpected_end": "Unexpected end",
	    "digit_expected": "digit expected",
	    "close_bracket_expected": "closing bracket expected",
	    "number_too_big": "number too large"
	},
	"exec_errors": {
	    "no_left": "can not move left",
	    "no_right": "can not move right",
	    "occupied": "can not take more blocks",
	    "not_occupied": "no blocks to put",
	    "nothing_to_take": "bo blocks to take",
	    "nowhere_to_put": "no place to put",
	    "forbidden_order": "this order of blocks is forbidden"
	},
	"field_errors": {
        "left_blocks_fail": "You should put 10 blocks on the trailer to the left",
        "right_blocks_fail": "You should put 10 blocks on a platform to the right"
	},
	"buttons": {
	    "to_start": "To start",
	    "clear": "Clear",
	    "step_forward": "Step +",
	    "step_back": "Step -",
	    "to_end": "Instantly",
	    "to_end_0": "To end",
        "go": "Go",
        "stop": "Stop",
        "manual": "Manual",
        "stop_manual": "Stop"
	},
	"step": "Step:",
	"msg": {
	    "no_errors": "No errors in program",
	    "finish": "Program terminated",
	    "execution_error": "Crane error:",
	    "parse_error": "Program error:"
	},
	"labels": {
	    "record": "Record",
	    "result": "Result",
        "in_place": "Correctly placed blocks:",
        "penalty": "Penalty:",
        "steps": "Program steps:",
        "prg_len": "Program length:"
	}
}